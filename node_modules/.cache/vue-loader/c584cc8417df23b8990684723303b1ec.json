{"remainingRequest":"/Users/Steve/Desktop/finalProject/twiter-project-v1/Twitter-API-Frontend-v1/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Steve/Desktop/finalProject/twiter-project-v1/Twitter-API-Frontend-v1/src/views/Setting.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/Steve/Desktop/finalProject/twiter-project-v1/Twitter-API-Frontend-v1/src/views/Setting.vue","mtime":1608527554171},{"path":"/Users/Steve/Desktop/finalProject/twiter-project-v1/Twitter-API-Frontend-v1/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Steve/Desktop/finalProject/twiter-project-v1/Twitter-API-Frontend-v1/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/Steve/Desktop/finalProject/twiter-project-v1/Twitter-API-Frontend-v1/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Steve/Desktop/finalProject/twiter-project-v1/Twitter-API-Frontend-v1/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBOYXZiYXIgZnJvbSAiLi8uLi9jb21wb25lbnRzL05hdmJhciI7CmltcG9ydCB1c2VyQVBJIGZyb20gIi4vLi4vYXBpcy91c2VycyI7CmltcG9ydCB7IFRvYXN0IH0gZnJvbSAiLi8uLi91dGlscy9oZWxwZXJzIjsKCmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICBOYXZiYXIsCiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgdXNlclByb2ZpbGU6IHsKICAgICAgICBhY2NvdW50OiAiIiwKICAgICAgICBuYW1lOiAiIiwKICAgICAgICBlbWFpbDogIiIsCiAgICAgICAgcGFzc3dvcmQ6ICIiLAogICAgICAgIHBhc3N3b3JkQ2hlY2s6ICIiLAogICAgICB9LAogICAgICBpc1Byb2Nlc3Npbmc6IGZhbHNlLAogICAgICBVc2VySWQ6ICIiLAogICAgfTsKICB9LAogIGNyZWF0ZWQoKSB7CiAgICBjb25zdCB7IGlkIH0gPSB0aGlzLiRyb3V0ZS5wYXJhbXM7CiAgICB0aGlzLmZldGNoUmVzdGF1cmFudChpZCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBhc3luYyBmZXRjaFJlc3RhdXJhbnQodXNlcklkKSB7CiAgICAgIHRyeSB7CiAgICAgICAgdGhpcy5Vc2VySWQgPSB1c2VySWQ7CiAgICAgICAgY29uc3QgeyBkYXRhIH0gPSBhd2FpdCB1c2VyQVBJLlVzZXJQcm9maWxlKHVzZXJJZCk7CiAgICAgICAgY29uc3QgeyBhY2NvdW50LCBuYW1lLCBlbWFpbCB9ID0gZGF0YTsKICAgICAgICB0aGlzLnVzZXJQcm9maWxlID0gewogICAgICAgICAgYWNjb3VudDogYWNjb3VudCwKICAgICAgICAgIG5hbWU6IG5hbWUsCiAgICAgICAgICBlbWFpbDogZW1haWwsCiAgICAgICAgICBwYXNzd29yZDogIiIsCiAgICAgICAgICBjaGVja1Bhc3N3b3JkOiAiIiwKICAgICAgICB9OwogICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgIHRoaXMuaXNQcm9jZXNzaW5nID0gZmFsc2U7CiAgICAgICAgVG9hc3QuZmlyZSh7CiAgICAgICAgICBpY29uOiAiZXJyb3IiLAogICAgICAgICAgdGl0bGU6ICLnhKHms5Xmm7TmlrDkvb/nlKjogIXos4foqIrvvIzoq4vnqI3lvozlho3oqaYiLAogICAgICAgIH0pOwogICAgICB9CiAgICB9LAogICAgYXN5bmMgaGFuZGxlU3VibWl0KHVzZXJJZCkgewogICAgICB0cnkgewogICAgICAgIHRoaXMuaXNQcm9jZXNzaW5nID0gdHJ1ZTsKICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHVzZXJBUEkuVXBkYXRlVXNlclNldHRpbmdQcm9maWxlKHVzZXJJZCwgewogICAgICAgICAgYWNjb3VudDogdGhpcy51c2VyUHJvZmlsZS5hY2NvdW50LAogICAgICAgICAgbmFtZTogdGhpcy51c2VyUHJvZmlsZS5uYW1lLAogICAgICAgICAgZW1haWw6IHRoaXMudXNlclByb2ZpbGUuZW1haWwsCiAgICAgICAgICBwYXNzd29yZDogdGhpcy51c2VyUHJvZmlsZS5wYXNzd29yZCwKICAgICAgICAgIGNoZWNrUGFzc3dvcmQ6IHRoaXMudXNlclByb2ZpbGUuY2hlY2tQYXNzd29yZCwKICAgICAgICB9KTsKICAgICAgICBpZiAocmVzcG9uc2Uuc3RhdHVzICE9PSAic3VjY2VzcyIpIHsKICAgICAgICAgIHRocm93IG5ldyBFcnJvcihyZXNwb25zZS5tZXNzYWdlKTsKICAgICAgICB9CgogICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHsgbmFtZTogIm1haW4iIH0pOwogICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgIHRoaXMuaXNQcm9jZXNzaW5nID0gZmFsc2U7CiAgICAgICAgVG9hc3QuZmlyZSh7CiAgICAgICAgICBpY29uOiAiZXJyb3IiLAogICAgICAgICAgdGl0bGU6ICLnhKHms5Xmm7TmlrDkvb/nlKjogIXos4foqIrvvIzoq4vnqI3lvozlho3oqaYiLAogICAgICAgIH0pOwogICAgICB9CiAgICB9LAogIH0sCn07Cg=="},{"version":3,"sources":["Setting.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+FA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Setting.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"container d-flex\">\n    <div class=\"setting-pannel\">\n      <Navbar />\n    </div>\n    <div class=\"main-content\">\n      <div class=\"header\"><p>帳戶設定</p></div>\n      <form\n        class=\"form-group w-100\"\n        @submit.stop.prevent=\"handleSubmit(UserId)\"\n      >\n        <div class=\"form-label-group\">\n          <label for=\"account\">帳號</label>\n          <input\n            id=\"account\"\n            name=\"account\"\n            v-model=\"userProfile.account\"\n            type=\"account\"\n            class=\"form-input form-control\"\n            placeholder=\"\"\n            autocomplete=\"account\"\n            required\n            autofocus\n          />\n        </div>\n        <div class=\"form-label-group\">\n          <label for=\"name\">名稱</label>\n          <input\n            id=\"name\"\n            name=\"name\"\n            v-model=\"userProfile.name\"\n            type=\"text\"\n            class=\"form-input form-control\"\n            placeholder=\"\"\n            autocomplete=\"username\"\n            required\n            autofocus\n          />\n        </div>\n\n        <div class=\"form-label-group\">\n          <label for=\"email\">Email</label>\n          <input\n            id=\"email\"\n            name=\"email\"\n            v-model=\"userProfile.email\"\n            type=\"email\"\n            class=\"form-input form-control\"\n            placeholder=\"\"\n            autocomplete=\"email\"\n            required\n          />\n        </div>\n\n        <div class=\"form-label-group\">\n          <label for=\"password\">密碼</label>\n          <input\n            id=\"password\"\n            name=\"password\"\n            v-model=\"userProfile.password\"\n            type=\"password\"\n            class=\"form-input form-control\"\n            placeholder=\"\"\n            autocomplete=\"new-password\"\n            required\n          />\n        </div>\n\n        <div class=\"form-label-group\">\n          <label for=\"password-check\">密碼確認</label>\n          <input\n            id=\"password-check\"\n            name=\"passwordCheck\"\n            v-model=\"userProfile.checkPassword\"\n            type=\"password\"\n            class=\"form-input form-control\"\n            placeholder=\"\"\n            autocomplete=\"new-password\"\n            required\n          />\n        </div>\n\n        <button\n          class=\"btn btn-lg btn-submit btn-block mb-3\"\n          type=\"submit\"\n          :disabled=\"isProcessing\"\n        >\n          Submit\n        </button>\n      </form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Navbar from \"./../components/Navbar\";\nimport userAPI from \"./../apis/users\";\nimport { Toast } from \"./../utils/helpers\";\n\nexport default {\n  components: {\n    Navbar,\n  },\n  data() {\n    return {\n      userProfile: {\n        account: \"\",\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        passwordCheck: \"\",\n      },\n      isProcessing: false,\n      UserId: \"\",\n    };\n  },\n  created() {\n    const { id } = this.$route.params;\n    this.fetchRestaurant(id);\n  },\n  methods: {\n    async fetchRestaurant(userId) {\n      try {\n        this.UserId = userId;\n        const { data } = await userAPI.UserProfile(userId);\n        const { account, name, email } = data;\n        this.userProfile = {\n          account: account,\n          name: name,\n          email: email,\n          password: \"\",\n          checkPassword: \"\",\n        };\n      } catch (error) {\n        this.isProcessing = false;\n        Toast.fire({\n          icon: \"error\",\n          title: \"無法更新使用者資訊，請稍後再試\",\n        });\n      }\n    },\n    async handleSubmit(userId) {\n      try {\n        this.isProcessing = true;\n        const response = await userAPI.UpdateUserSettingProfile(userId, {\n          account: this.userProfile.account,\n          name: this.userProfile.name,\n          email: this.userProfile.email,\n          password: this.userProfile.password,\n          checkPassword: this.userProfile.checkPassword,\n        });\n        if (response.status !== \"success\") {\n          throw new Error(response.message);\n        }\n\n        this.$router.push({ name: \"main\" });\n      } catch (error) {\n        this.isProcessing = false;\n        Toast.fire({\n          icon: \"error\",\n          title: \"無法更新使用者資訊，請稍後再試\",\n        });\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.container {\n  margin: 0 auto 0 auto;\n}\n.setting-pannel {\n  width: 378px;\n  height: 100%;\n  border-left: 2px #e6ecf0 solid;\n}\n.main-content {\n  height: 100%;\n  flex-grow: 1;\n  border-left: 2px #e6ecf0 solid;\n  border-right: 2px #e6ecf0 solid;\n}\n.main-content .header {\n  width: 100%;\n  height: 55px;\n  border-bottom: 2px #e6ecf0 solid;\n}\n.main-content .header p {\n  font-family: Noto Sans TC;\n  font-style: normal;\n  font-weight: bold;\n  font-size: 19px;\n  line-height: 28px;\n  color: #1c1c1c;\n  margin-top: 13px;\n  margin-left: 23.7px;\n}\n.form-group {\n  margin: 30px auto auto 16px;\n}\n.btn-submit {\n  width: 122px;\n  margin: 30px 0px 0px auto;\n}\n</style>"]}]}