{"remainingRequest":"/Users/Steve/Desktop/finalProject/twiter-project-v1/Twitter-API-Frontend-v1/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Steve/Desktop/finalProject/twiter-project-v1/Twitter-API-Frontend-v1/src/views/twitterIndex.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/Steve/Desktop/finalProject/twiter-project-v1/Twitter-API-Frontend-v1/src/views/twitterIndex.vue","mtime":1608531321836},{"path":"/Users/Steve/Desktop/finalProject/twiter-project-v1/Twitter-API-Frontend-v1/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Steve/Desktop/finalProject/twiter-project-v1/Twitter-API-Frontend-v1/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/Steve/Desktop/finalProject/twiter-project-v1/Twitter-API-Frontend-v1/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Steve/Desktop/finalProject/twiter-project-v1/Twitter-API-Frontend-v1/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBOYXZiYXIgZnJvbSAiLi8uLi9jb21wb25lbnRzL05hdmJhciI7CmltcG9ydCBGb2xsb3dlcnMgZnJvbSAiLi8uLi9jb21wb25lbnRzL2ZvbGxvd2VycyI7CmltcG9ydCB0d2l0dGVyTGlzdCBmcm9tICIuLy4uL2NvbXBvbmVudHMvdHdpdHRlckxpc3QiOwppbXBvcnQgdHdpdHRlckFQSSBmcm9tICIuLy4uL2FwaXMvdHdpdHRlciI7CmltcG9ydCB1c2VyQVBJIGZyb20gIi4vLi4vYXBpcy91c2VycyI7CmltcG9ydCBmb2xsb3dlckFQSSBmcm9tICIuLy4uL2FwaXMvZm9sbG93ZXJzIjsKaW1wb3J0IHsgbWFwU3RhdGUgfSBmcm9tICJ2dWV4IjsKaW1wb3J0IHsgVG9hc3QgfSBmcm9tICIuLy4uL3V0aWxzL2hlbHBlcnMiOwoKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIE5hdmJhciwKICAgIEZvbGxvd2VycywKICAgIHR3aXR0ZXJMaXN0LAogIH0sCiAgY3JlYXRlZCgpIHsKICAgIHRoaXMuZmV0Y2h0d2l0dGVyTGlzdCgpOwogICAgdGhpcy5mZXRjaFVzZXJwcm9maWxlKCk7CiAgICB0aGlzLmZldGNoRm9sbG93ZXJMaXN0KCk7CiAgfSwKICBjb21wdXRlZDogewogICAgLi4ubWFwU3RhdGUoWyJjdXJyZW50VXNlciIsICJpc0F1dGhlbnRpY2F0ZWQiXSksCiAgfSwKICBtZXRob2RzOiB7CiAgICBhc3luYyBmZXRjaHR3aXR0ZXJMaXN0KCkgewogICAgICB0cnkgewogICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgdHdpdHRlckFQSS5Ud2l0dGVyQWxsKCk7CiAgICAgICAgdGhpcy50d2l0dGVycyA9IHJlc3BvbnNlLmRhdGE7CiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgY29uc29sZS5sb2coImVycm9yIiwgZXJyb3IpOwogICAgICAgIFRvYXN0LmZpcmUoewogICAgICAgICAgaWNvbjogIndhcm5pbmciLAogICAgICAgICAgdGl0bGU6IGVycm9yLAogICAgICAgIH0pOwogICAgICB9CiAgICB9LAogICAgYXN5bmMgZmV0Y2hVc2VycHJvZmlsZSgpIHsKICAgICAgdHJ5IHsKICAgICAgICBjb25zdCBOZXdkYXRhID0gYXdhaXQgdXNlckFQSS5nZXRDdXJyZW50VXNlcigpOwogICAgICAgIGNvbnN0IHVzZXJJZCA9IE5ld2RhdGEuZGF0YS5pZDsKICAgICAgICB0aGlzLlVzZXJJZCA9IHVzZXJJZDsKICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHVzZXJBUEkuVXNlclByb2ZpbGUodXNlcklkKTsKICAgICAgICB0aGlzLlVzZXJQcm9maWxlID0gcmVzcG9uc2UuZGF0YTsKICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICBjb25zb2xlLmxvZygiZXJyb3IiLCBlcnJvcik7CiAgICAgICAgVG9hc3QuZmlyZSh7CiAgICAgICAgICBpY29uOiAid2FybmluZyIsCiAgICAgICAgICB0aXRsZTogZXJyb3IsCiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0sCiAgICBhc3luYyBmZXRjaEZvbGxvd2VyTGlzdCgpIHsKICAgICAgdHJ5IHsKICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZvbGxvd2VyQVBJLlRvcFVzZXJzKCk7CiAgICAgICAgdGhpcy5mb2xsb3dlcmxpc3QgPSByZXNwb25zZS5kYXRhOwogICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgIGNvbnNvbGUubG9nKCJlcnJvciIsIGVycm9yKTsKICAgICAgICBUb2FzdC5maXJlKHsKICAgICAgICAgIGljb246ICJ3YXJuaW5nIiwKICAgICAgICAgIHRpdGxlOiBlcnJvciwKICAgICAgICB9KTsKICAgICAgfQogICAgfSwKICAgIGFzeW5jIGFmdGVyQ3JlYXRlVHdpdHRlcihwYXlsb2FkKSB7CiAgICAgIHRyeSB7CiAgICAgICAgY29uc3QgeyBEZXNjcmlwdGlvbiB9ID0gcGF5bG9hZDsKICAgICAgICB0aGlzLnR3aXR0ZXIgPSBEZXNjcmlwdGlvbjsKICAgICAgICBpZiAodGhpcy50d2l0dGVyLmxlbmd0aCA+IDE0MCkgewogICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCLlrZfmlbjkuI3lj6/ku6XotoXpgY4xNDDlgIvlrZciKTsKICAgICAgICB9IGVsc2UgaWYgKHRoaXMudHdpdHRlci5sZW5ndGggPT09IDApIHsKICAgICAgICAgIHRocm93IG5ldyBFcnJvcigi5LiN5Y+v5Lul6Ly45YWl56m655m9Iik7CiAgICAgICAgfQogICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgdHdpdHRlckFQSS5wb3N0VHdpdHRlcih7CiAgICAgICAgICBkZXNjcmlwdGlvbjogdGhpcy50d2l0dGVyLAogICAgICAgIH0pOwogICAgICAgIGNvbnN0IHsgZGF0YSB9ID0gcmVzcG9uc2U7CgogICAgICAgIGlmIChkYXRhLnN0YXR1cyAhPT0gInN1Y2Nlc3MiKSB7CiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoZGF0YS5tZXNzYWdlKTsKICAgICAgICB9CiAgICAgICAgdGhpcy5yZXBsaWVkVHdpdHRlciA9IHsKICAgICAgICAgIGlkOiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAxMDAwMDAwMDApICsgMSwKICAgICAgICAgIFVzZXI6IHsKICAgICAgICAgICAgaWQ6IHRoaXMuVXNlclByb2ZpbGUuaWQsCiAgICAgICAgICAgIGFjY291bnQ6IHRoaXMuVXNlclByb2ZpbGUuYWNjb3VudCwKICAgICAgICAgICAgbmFtZTogdGhpcy5Vc2VyUHJvZmlsZS5uYW1lLAogICAgICAgICAgICBhdmF0YXI6IHRoaXMuVXNlclByb2ZpbGUuYXZhdGFyLAogICAgICAgICAgfSwKICAgICAgICAgIHJlcGxpZWRDb3VudDogMCwKICAgICAgICAgIGZvbGxvd2VkQ291bnQ6IDAsCiAgICAgICAgICBjcmVhdGVkQXQ6IG5ldyBEYXRlKCksCiAgICAgICAgICB1cGRhdGVkQXQ6ICIiLAogICAgICAgICAgaXNsaWtlZDogZmFsc2UsCiAgICAgICAgICBkZXNjcmlwdGlvbjogdGhpcy50d2l0dGVyLAogICAgICAgIH07CiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgY29uc29sZS5sb2coImVycm9yIiwgZXJyb3IpOwogICAgICAgIFRvYXN0LmZpcmUoewogICAgICAgICAgaWNvbjogIndhcm5pbmciLAogICAgICAgICAgdGl0bGU6IGVycm9yLAogICAgICAgIH0pOwogICAgICB9CiAgICAgIHRoaXMudHdpdHRlciA9ICIiOwogICAgfSwKICAgIGFzeW5jIGhhbmRsZVN1Ym1pdCgpIHsKICAgICAgdHJ5IHsKICAgICAgICBpZiAodGhpcy50d2l0dGVyLmxlbmd0aCA+IDE0MCkgewogICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCLlrZfmlbjkuI3lj6/ku6XotoXpgY4xNDDlgIvlrZciKTsKICAgICAgICB9IGVsc2UgaWYgKHRoaXMudHdpdHRlci5sZW5ndGggPT09IDApIHsKICAgICAgICAgIHRocm93IG5ldyBFcnJvcigi5LiN5Y+v5Lul6Ly45YWl56m655m9Iik7CiAgICAgICAgfQogICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgdHdpdHRlckFQSS5wb3N0VHdpdHRlcih7CiAgICAgICAgICBkZXNjcmlwdGlvbjogdGhpcy50d2l0dGVyLAogICAgICAgIH0pOwogICAgICAgIGNvbnN0IHsgZGF0YSB9ID0gcmVzcG9uc2U7CgogICAgICAgIGlmIChkYXRhLnN0YXR1cyAhPT0gInN1Y2Nlc3MiKSB7CiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoZGF0YS5tZXNzYWdlKTsKICAgICAgICB9CiAgICAgICAgdGhpcy5yZXBsaWVkVHdpdHRlciA9IHsKICAgICAgICAgIGlkOiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAxMDAwMDAwMDApICsgMSwKICAgICAgICAgIFVzZXI6IHsKICAgICAgICAgICAgaWQ6IHRoaXMuVXNlclByb2ZpbGUuaWQsCiAgICAgICAgICAgIGFjY291bnQ6IHRoaXMuVXNlclByb2ZpbGUuYWNjb3VudCwKICAgICAgICAgICAgbmFtZTogdGhpcy5Vc2VyUHJvZmlsZS5uYW1lLAogICAgICAgICAgICBhdmF0YXI6IHRoaXMuVXNlclByb2ZpbGUuYXZhdGFyLAogICAgICAgICAgfSwKICAgICAgICAgIHJlcGxpZWRDb3VudDogMCwKICAgICAgICAgIGZvbGxvd2VkQ291bnQ6IDAsCiAgICAgICAgICBjcmVhdGVkQXQ6IG5ldyBEYXRlKCksCiAgICAgICAgICB1cGRhdGVkQXQ6ICIiLAogICAgICAgICAgaXNsaWtlZDogZmFsc2UsCiAgICAgICAgICBkZXNjcmlwdGlvbjogdGhpcy50d2l0dGVyLAogICAgICAgIH07CiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgY29uc29sZS5sb2coImVycm9yIiwgZXJyb3IpOwogICAgICAgIFRvYXN0LmZpcmUoewogICAgICAgICAgaWNvbjogIndhcm5pbmciLAogICAgICAgICAgdGl0bGU6IGVycm9yLAogICAgICAgIH0pOwogICAgICB9CiAgICAgIHRoaXMudHdpdHRlciA9ICIiOwogICAgfSwKICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB0d2l0dGVyOiAiIiwKICAgICAgVXNlcklkOiAiIiwKICAgICAgVXNlclByb2ZpbGU6IHt9LAogICAgICByZXBsaWVkVHdpdHRlcjogewogICAgICAgIGlkOiAtMSwKICAgICAgICBVc2VyOiB7CiAgICAgICAgICBpZDogMTQsCiAgICAgICAgICBhY2NvdW50OiAiYm13IiwKICAgICAgICAgIG5hbWU6ICJCTVciLAogICAgICAgICAgZW1haWw6ICJCTVdAZXhhbXBsZS5jb20iLAogICAgICAgICAgYXZhdGFyOiAiaHR0cHM6Ly9pLnByYXZhdGFyLmNjLzMwMCIsCiAgICAgICAgICBjb3ZlcjogImh0dHBzOi8vaS5wcmF2YXRhci5jYy8zMDAiLAogICAgICAgICAgaXNGb2xsb3dlZDogdHJ1ZSwKICAgICAgICAgIGludHJvZHVjdGlvbjogImhlbGxvIHdvcmxkISIsCiAgICAgICAgICBmb2xsb3dlckNvdW50OiAxLAogICAgICAgICAgZm9sbG93aW5nQ291bnQ6IDMsCiAgICAgICAgfSwKICAgICAgICByZXBsaWVkQ291bnQ6IC0xLAogICAgICAgIGZvbGxvd2VkQ291bnQ6IC0xLAogICAgICAgIGNyZWF0ZWRBdDogIiIsCiAgICAgICAgdXBkYXRlZEF0OiAiIiwKICAgICAgICBpc2xpa2VkOiB0cnVlLAogICAgICAgIGRlc2NyaXB0aW9uOiAiIiwKICAgICAgfSwKICAgICAgdHdpdHRlcnM6IFtdLAogICAgICBmb2xsb3dlcmxpc3Q6IFtdLAogICAgfTsKICB9LAp9Owo="},{"version":3,"sources":["twitterIndex.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"twitterIndex.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"row h-100\">\n      <div class=\"setting-pannel col-3 h-100\">\n        <Navbar\n          @after-create-twitter=\"afterCreateTwitter\"\n          :user-profile=\"UserProfile\"\n        />\n      </div>\n      <div class=\"main-content col h-100\">\n        <div class=\"header d-flex\">\n          <img class=\"back-icon\" src=\"/image/back_icon.png\" alt=\"backIcon\" />\n          <p>推文</p>\n        </div>\n        <div class=\"twitter-bar d-flex\">\n          <img class=\"profile-avater\" :src=\"UserProfile.avatar\" alt=\"avater\" />\n          <div class=\"card-content\">\n            <p class=\"card-name\">apple</p>\n            <p class=\"card-account\">@apple</p>\n          </div>\n        </div>\n        <twitterList :replied-twitter=\"repliedTwitter\" :Twitters=\"twitters\" />\n      </div>\n      <div class=\"main-follower col-4 h-100\">\n        <Followers :user-profile=\"UserProfile\" :follower-list=\"followerlist\" />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Navbar from \"./../components/Navbar\";\nimport Followers from \"./../components/followers\";\nimport twitterList from \"./../components/twitterList\";\nimport twitterAPI from \"./../apis/twitter\";\nimport userAPI from \"./../apis/users\";\nimport followerAPI from \"./../apis/followers\";\nimport { mapState } from \"vuex\";\nimport { Toast } from \"./../utils/helpers\";\n\nexport default {\n  components: {\n    Navbar,\n    Followers,\n    twitterList,\n  },\n  created() {\n    this.fetchtwitterList();\n    this.fetchUserprofile();\n    this.fetchFollowerList();\n  },\n  computed: {\n    ...mapState([\"currentUser\", \"isAuthenticated\"]),\n  },\n  methods: {\n    async fetchtwitterList() {\n      try {\n        const response = await twitterAPI.TwitterAll();\n        this.twitters = response.data;\n      } catch (error) {\n        console.log(\"error\", error);\n        Toast.fire({\n          icon: \"warning\",\n          title: error,\n        });\n      }\n    },\n    async fetchUserprofile() {\n      try {\n        const Newdata = await userAPI.getCurrentUser();\n        const userId = Newdata.data.id;\n        this.UserId = userId;\n        const response = await userAPI.UserProfile(userId);\n        this.UserProfile = response.data;\n      } catch (error) {\n        console.log(\"error\", error);\n        Toast.fire({\n          icon: \"warning\",\n          title: error,\n        });\n      }\n    },\n    async fetchFollowerList() {\n      try {\n        const response = await followerAPI.TopUsers();\n        this.followerlist = response.data;\n      } catch (error) {\n        console.log(\"error\", error);\n        Toast.fire({\n          icon: \"warning\",\n          title: error,\n        });\n      }\n    },\n    async afterCreateTwitter(payload) {\n      try {\n        const { Description } = payload;\n        this.twitter = Description;\n        if (this.twitter.length > 140) {\n          throw new Error(\"字數不可以超過140個字\");\n        } else if (this.twitter.length === 0) {\n          throw new Error(\"不可以輸入空白\");\n        }\n        const response = await twitterAPI.postTwitter({\n          description: this.twitter,\n        });\n        const { data } = response;\n\n        if (data.status !== \"success\") {\n          throw new Error(data.message);\n        }\n        this.repliedTwitter = {\n          id: Math.floor(Math.random() * 100000000) + 1,\n          User: {\n            id: this.UserProfile.id,\n            account: this.UserProfile.account,\n            name: this.UserProfile.name,\n            avatar: this.UserProfile.avatar,\n          },\n          repliedCount: 0,\n          followedCount: 0,\n          createdAt: new Date(),\n          updatedAt: \"\",\n          isliked: false,\n          description: this.twitter,\n        };\n      } catch (error) {\n        console.log(\"error\", error);\n        Toast.fire({\n          icon: \"warning\",\n          title: error,\n        });\n      }\n      this.twitter = \"\";\n    },\n    async handleSubmit() {\n      try {\n        if (this.twitter.length > 140) {\n          throw new Error(\"字數不可以超過140個字\");\n        } else if (this.twitter.length === 0) {\n          throw new Error(\"不可以輸入空白\");\n        }\n        const response = await twitterAPI.postTwitter({\n          description: this.twitter,\n        });\n        const { data } = response;\n\n        if (data.status !== \"success\") {\n          throw new Error(data.message);\n        }\n        this.repliedTwitter = {\n          id: Math.floor(Math.random() * 100000000) + 1,\n          User: {\n            id: this.UserProfile.id,\n            account: this.UserProfile.account,\n            name: this.UserProfile.name,\n            avatar: this.UserProfile.avatar,\n          },\n          repliedCount: 0,\n          followedCount: 0,\n          createdAt: new Date(),\n          updatedAt: \"\",\n          isliked: false,\n          description: this.twitter,\n        };\n      } catch (error) {\n        console.log(\"error\", error);\n        Toast.fire({\n          icon: \"warning\",\n          title: error,\n        });\n      }\n      this.twitter = \"\";\n    },\n  },\n  data() {\n    return {\n      twitter: \"\",\n      UserId: \"\",\n      UserProfile: {},\n      repliedTwitter: {\n        id: -1,\n        User: {\n          id: 14,\n          account: \"bmw\",\n          name: \"BMW\",\n          email: \"BMW@example.com\",\n          avatar: \"https://i.pravatar.cc/300\",\n          cover: \"https://i.pravatar.cc/300\",\n          isFollowed: true,\n          introduction: \"hello world!\",\n          followerCount: 1,\n          followingCount: 3,\n        },\n        repliedCount: -1,\n        followedCount: -1,\n        createdAt: \"\",\n        updatedAt: \"\",\n        isliked: true,\n        description: \"\",\n      },\n      twitters: [],\n      followerlist: [],\n    };\n  },\n};\n</script>\n\n<style scoped>\n.container {\n  max-width: 1440px;\n  height: 1200px;\n  margin: 0 auto 0 auto;\n}\n.navbar {\n  margin: 0 25px auto auto;\n}\n.main-content {\n  width: 600px;\n  padding: 0;\n  border-left: 1px #e6ecf0 solid;\n  border-right: 1px #e6ecf0 solid;\n}\n.main-content .header {\n  width: 100%;\n  height: 55px;\n  border-bottom: 2px #e6ecf0 solid;\n}\n.main-content .header .back-icon {\n  width: 17px;\n  height: 14px;\n  margin: 20px 0 21px 19px;\n}\n.main-content .header p {\n  width: 100px;\n  height: 26px;\n  font-family: Noto Sans TC;\n  font-style: normal;\n  font-weight: bold;\n  font-size: 19px;\n  line-height: 26px;\n  color: #1c1c1c;\n  margin: 14px auto 15px 43px;\n}\n.twitter-bar {\n  height: 120px;\n  border-bottom: 10px #e6ecf0 solid;\n  position: relative;\n}\n.profile-avater {\n  width: 50px;\n  height: 50px;\n  margin: 10px 0 auto 15px;\n  border-radius: 50%;\n}\n.card-content {\n  width: 79px;\n  height: 33px;\n  margin: 0;\n}\n.card-name {\n  margin: 0;\n  font-family: Noto Sans TC;\n  font-style: normal;\n  font-weight: bold;\n  font-size: 15px;\n  line-height: 15px;\n  color: #1c1c1c;\n}\n.card-account {\n  margin: 3px 0 0 0;\n  font-family: Noto Sans TC;\n  font-style: normal;\n  font-weight: bold;\n  font-size: 15px;\n  line-height: 15px;\n  color: #657786;\n}\n.form-group {\n  margin: 0;\n  width: 510px;\n  height: 26px;\n  margin: 21px auto auto 10px;\n}\n.twitter-input {\n  border: none;\n  background: none;\n  width: 100%;\n  height: 100%;\n  padding: 0;\n}\n.btn-submit {\n  width: 64px;\n  height: 40px;\n  font-family: Noto Sans TC;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 18px;\n  padding: 0;\n  margin: 0;\n  position: absolute;\n  top: 60px;\n  right: 15px;\n}\n</style>"]}]}