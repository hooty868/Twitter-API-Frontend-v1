{"remainingRequest":"/Users/Steve/Desktop/finalProject/twiter-project-v1/Twitter-API-Frontend-v1/node_modules/babel-loader/lib/index.js!/Users/Steve/Desktop/finalProject/twiter-project-v1/Twitter-API-Frontend-v1/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/Steve/Desktop/finalProject/twiter-project-v1/Twitter-API-Frontend-v1/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Steve/Desktop/finalProject/twiter-project-v1/Twitter-API-Frontend-v1/src/views/twitterIndex.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/Steve/Desktop/finalProject/twiter-project-v1/Twitter-API-Frontend-v1/src/views/twitterIndex.vue","mtime":1608531321836},{"path":"/Users/Steve/Desktop/finalProject/twiter-project-v1/Twitter-API-Frontend-v1/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Steve/Desktop/finalProject/twiter-project-v1/Twitter-API-Frontend-v1/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/Steve/Desktop/finalProject/twiter-project-v1/Twitter-API-Frontend-v1/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Steve/Desktop/finalProject/twiter-project-v1/Twitter-API-Frontend-v1/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["twitterIndex.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"row h-100\">\n      <div class=\"setting-pannel col-3 h-100\">\n        <Navbar\n          @after-create-twitter=\"afterCreateTwitter\"\n          :user-profile=\"UserProfile\"\n        />\n      </div>\n      <div class=\"main-content col h-100\">\n        <div class=\"header d-flex\">\n          <img class=\"back-icon\" src=\"/image/back_icon.png\" alt=\"backIcon\" />\n          <p>推文</p>\n        </div>\n        <div class=\"twitter-bar d-flex\">\n          <img class=\"profile-avater\" :src=\"UserProfile.avatar\" alt=\"avater\" />\n          <div class=\"card-content\">\n            <p class=\"card-name\">apple</p>\n            <p class=\"card-account\">@apple</p>\n          </div>\n        </div>\n        <twitterList :replied-twitter=\"repliedTwitter\" :Twitters=\"twitters\" />\n      </div>\n      <div class=\"main-follower col-4 h-100\">\n        <Followers :user-profile=\"UserProfile\" :follower-list=\"followerlist\" />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Navbar from \"./../components/Navbar\";\nimport Followers from \"./../components/followers\";\nimport twitterList from \"./../components/twitterList\";\nimport twitterAPI from \"./../apis/twitter\";\nimport userAPI from \"./../apis/users\";\nimport followerAPI from \"./../apis/followers\";\nimport { mapState } from \"vuex\";\nimport { Toast } from \"./../utils/helpers\";\n\nexport default {\n  components: {\n    Navbar,\n    Followers,\n    twitterList,\n  },\n  created() {\n    this.fetchtwitterList();\n    this.fetchUserprofile();\n    this.fetchFollowerList();\n  },\n  computed: {\n    ...mapState([\"currentUser\", \"isAuthenticated\"]),\n  },\n  methods: {\n    async fetchtwitterList() {\n      try {\n        const response = await twitterAPI.TwitterAll();\n        this.twitters = response.data;\n      } catch (error) {\n        console.log(\"error\", error);\n        Toast.fire({\n          icon: \"warning\",\n          title: error,\n        });\n      }\n    },\n    async fetchUserprofile() {\n      try {\n        const Newdata = await userAPI.getCurrentUser();\n        const userId = Newdata.data.id;\n        this.UserId = userId;\n        const response = await userAPI.UserProfile(userId);\n        this.UserProfile = response.data;\n      } catch (error) {\n        console.log(\"error\", error);\n        Toast.fire({\n          icon: \"warning\",\n          title: error,\n        });\n      }\n    },\n    async fetchFollowerList() {\n      try {\n        const response = await followerAPI.TopUsers();\n        this.followerlist = response.data;\n      } catch (error) {\n        console.log(\"error\", error);\n        Toast.fire({\n          icon: \"warning\",\n          title: error,\n        });\n      }\n    },\n    async afterCreateTwitter(payload) {\n      try {\n        const { Description } = payload;\n        this.twitter = Description;\n        if (this.twitter.length > 140) {\n          throw new Error(\"字數不可以超過140個字\");\n        } else if (this.twitter.length === 0) {\n          throw new Error(\"不可以輸入空白\");\n        }\n        const response = await twitterAPI.postTwitter({\n          description: this.twitter,\n        });\n        const { data } = response;\n\n        if (data.status !== \"success\") {\n          throw new Error(data.message);\n        }\n        this.repliedTwitter = {\n          id: Math.floor(Math.random() * 100000000) + 1,\n          User: {\n            id: this.UserProfile.id,\n            account: this.UserProfile.account,\n            name: this.UserProfile.name,\n            avatar: this.UserProfile.avatar,\n          },\n          repliedCount: 0,\n          followedCount: 0,\n          createdAt: new Date(),\n          updatedAt: \"\",\n          isliked: false,\n          description: this.twitter,\n        };\n      } catch (error) {\n        console.log(\"error\", error);\n        Toast.fire({\n          icon: \"warning\",\n          title: error,\n        });\n      }\n      this.twitter = \"\";\n    },\n    async handleSubmit() {\n      try {\n        if (this.twitter.length > 140) {\n          throw new Error(\"字數不可以超過140個字\");\n        } else if (this.twitter.length === 0) {\n          throw new Error(\"不可以輸入空白\");\n        }\n        const response = await twitterAPI.postTwitter({\n          description: this.twitter,\n        });\n        const { data } = response;\n\n        if (data.status !== \"success\") {\n          throw new Error(data.message);\n        }\n        this.repliedTwitter = {\n          id: Math.floor(Math.random() * 100000000) + 1,\n          User: {\n            id: this.UserProfile.id,\n            account: this.UserProfile.account,\n            name: this.UserProfile.name,\n            avatar: this.UserProfile.avatar,\n          },\n          repliedCount: 0,\n          followedCount: 0,\n          createdAt: new Date(),\n          updatedAt: \"\",\n          isliked: false,\n          description: this.twitter,\n        };\n      } catch (error) {\n        console.log(\"error\", error);\n        Toast.fire({\n          icon: \"warning\",\n          title: error,\n        });\n      }\n      this.twitter = \"\";\n    },\n  },\n  data() {\n    return {\n      twitter: \"\",\n      UserId: \"\",\n      UserProfile: {},\n      repliedTwitter: {\n        id: -1,\n        User: {\n          id: 14,\n          account: \"bmw\",\n          name: \"BMW\",\n          email: \"BMW@example.com\",\n          avatar: \"https://i.pravatar.cc/300\",\n          cover: \"https://i.pravatar.cc/300\",\n          isFollowed: true,\n          introduction: \"hello world!\",\n          followerCount: 1,\n          followingCount: 3,\n        },\n        repliedCount: -1,\n        followedCount: -1,\n        createdAt: \"\",\n        updatedAt: \"\",\n        isliked: true,\n        description: \"\",\n      },\n      twitters: [],\n      followerlist: [],\n    };\n  },\n};\n</script>\n\n<style scoped>\n.container {\n  max-width: 1440px;\n  height: 1200px;\n  margin: 0 auto 0 auto;\n}\n.navbar {\n  margin: 0 25px auto auto;\n}\n.main-content {\n  width: 600px;\n  padding: 0;\n  border-left: 1px #e6ecf0 solid;\n  border-right: 1px #e6ecf0 solid;\n}\n.main-content .header {\n  width: 100%;\n  height: 55px;\n  border-bottom: 2px #e6ecf0 solid;\n}\n.main-content .header .back-icon {\n  width: 17px;\n  height: 14px;\n  margin: 20px 0 21px 19px;\n}\n.main-content .header p {\n  width: 100px;\n  height: 26px;\n  font-family: Noto Sans TC;\n  font-style: normal;\n  font-weight: bold;\n  font-size: 19px;\n  line-height: 26px;\n  color: #1c1c1c;\n  margin: 14px auto 15px 43px;\n}\n.twitter-bar {\n  height: 120px;\n  border-bottom: 10px #e6ecf0 solid;\n  position: relative;\n}\n.profile-avater {\n  width: 50px;\n  height: 50px;\n  margin: 10px 0 auto 15px;\n  border-radius: 50%;\n}\n.card-content {\n  width: 79px;\n  height: 33px;\n  margin: 0;\n}\n.card-name {\n  margin: 0;\n  font-family: Noto Sans TC;\n  font-style: normal;\n  font-weight: bold;\n  font-size: 15px;\n  line-height: 15px;\n  color: #1c1c1c;\n}\n.card-account {\n  margin: 3px 0 0 0;\n  font-family: Noto Sans TC;\n  font-style: normal;\n  font-weight: bold;\n  font-size: 15px;\n  line-height: 15px;\n  color: #657786;\n}\n.form-group {\n  margin: 0;\n  width: 510px;\n  height: 26px;\n  margin: 21px auto auto 10px;\n}\n.twitter-input {\n  border: none;\n  background: none;\n  width: 100%;\n  height: 100%;\n  padding: 0;\n}\n.btn-submit {\n  width: 64px;\n  height: 40px;\n  font-family: Noto Sans TC;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 18px;\n  padding: 0;\n  margin: 0;\n  position: absolute;\n  top: 60px;\n  right: 15px;\n}\n</style>"],"sourceRoot":"src/views"}]}